
```{r}
#logistic regression preparation
df <- read.csv("match_team2011_.csv")
df$result <- ifelse(df$home_team_goal>df$away_team_goal,1,0)
df[,1:7] <- NULL
df[,2] <- NULL
df[,9] <- NULL
df[,10] <- NULL
df$bdspeed <- df$buildUpPlaySpeed-df$buildUpPlaySpeed.1
df$ppass <- df$buildUpPlayPassing-df$buildUpPlayPassing.1
df$cpass <- df$chanceCreationPassing-df$chanceCreationPassing.1
df$ccross <- df$chanceCreationCrossing-df$chanceCreationCrossing.1
df$cshoot <- df$chanceCreationShooting-df$chanceCreationShooting.1
df$dpressure <- df$defencePressure-df$defencePressure.1
df$daggression <- df$defenceAggression-df$defenceAggression.1
df$dwidth <- df$defenceTeamWidth-df$defenceTeamWidth.1
df[,1:16] <- NULL
set.seed(12345)
intrain <- sample(nrow(df),0.7*nrow(df))
train <- df[intrain,]
val <- df[-intrain,]
#lm glm#
fit1 <- lm(result~.,data = train)
summary(fit1)
fit2 <- glm(result~.,data = train, family = "binomial")
summary(fit2)
actual <- val$result

predicted.probability <- predict(fit2, newdata=val, type = "response") 
df1V <- data.frame(predicted.probability, actual)
df1VS <- df1V[order(-predicted.probability),]
df1VS$Gains <- cumsum(df1VS$actual)
plot(df1VS$Gains,type="n",main="Validation Data Gains Chart-logis",xlab="Number of Cases",ylab="Cumulative Success")
lines(df1VS$Gains)
abline(0,sum(df1VS$actual)/nrow(df1VS),lty = 2, col="red")
```



```{r}
#logistic regression#
fit2 <- glm(result~.,data = train,family = "binomial")
summary(fit2)
actual.glm <- val$result
pre.glm <- predict(fit2, newdata = val,type = "response")
pre.glm <- as.integer(pre.glm>0.5)
t.glm <- table(actual.glm,pre.glm)
t.glm
acc.glm <- (t.glm[1,1]+t.glm[2,2])/sum(t.glm)
acc.glm
cutoff <- seq(0, 1, length = 100)
fpr <- numeric(100)
tpr <- numeric(100)
roc.table <- data.frame(Cutoff = cutoff, FPR = fpr,TPR = tpr)
for (i in 1:100) {
  roc.table$FPR[i] <- sum(pre.glm > cutoff[i] & actual.glm == "0")/sum(actual.glm == "0")
  roc.table$TPR[i] <- sum(pre.glm > cutoff[i] & actual.glm == "1")/sum(actual.glm == "1")
}

plot(TPR ~ FPR, data = roc.table, type = "o",xlab="1 - Specificity",ylab="Sensitivity",col="blue",lty=2)
abline(a = 0, b = 1, lty = 2,col="red")
```


```{r}
#lasso#
library(leaps)
library(glmnet)
subselect_full <- regsubsets(result~.,df,nvmax = 18)
sub_full_summary <- summary(subselect_full)
sub_full_summary
plot(sub_full_summary$bic,xlab = "number of variables")
which.min(sub_full_summary$bic)
x=model.matrix(result~.,df)
y=df$result
grid = 10^seq(10,-2,length=100)
lasso <- glmnet(x,y,alpha = 1,lambda = grid)
plot(lasso)

set.seed(123)
cv.out =cv.glmnet(x,y,alpha = 1)
plot(cv.out)
bestlam=cv.out$lambda.min
out=glmnet(x,y,alpha = 1,lambda = grid)
lasso.coef=predict(out,type="coefficients",s=bestlam)[1:18,]
lasso.coef[lasso.coef!=0]
```


```{r}
#quadratic logistic regression#
df$avg.buildUpPlayPassing.1 <- df$avg.buildUpPlayPassing.^2
df$avg.chanceCreationCrossing.1 <- df$avg.chanceCreationCrossing.^2
df$avg.chanceCreationShooting.1 <- df$avg.chanceCreationShooting.^2
df$avg.defencePressure.1 <- df$avg.defencePressure.^2
df$avg.defenceAggression.1 <- df$avg.defenceAggression.^2
df$avg.defenceTeamWidth.1 <- df$avg.defenceTeamWidth.^2
df$avg.chanceCreationPassing..11 <- df$avg.buildUpPlayPassing..1^2
df$avg.chanceCreationCrossing..11 <- df$avg.chanceCreationCrossing..1^2
df$avg.chanceCreationShooting..11 <- df$avg.chanceCreationShooting..1^2
df$avg.defencePressure..11 <- df$avg.defencePressure..1^2
df$avg.defenceAggression..11 <- df$avg.defenceAggression..1^2
df$avg.defenceTeamWidth..11 <- df$avg.defenceTeamWidth..1^2
set.seed(12345)
intrain <- sample(nrow(df),0.7*nrow(df))
train <- df[intrain,]
val <- df[-intrain,]
fit3 <- glm(result~.,data = train,family = "binomial")
summary(fit3)
predict_fit3 <- predict(fit3,val, type = "response")
predict_fit3 = ifelse(predict_fit3>0.5,1,0)
(t1 <- table(val$result,predict_fit3))
(acc<- (t1[1,1]+t1[2,2])/sum(t1))
```
